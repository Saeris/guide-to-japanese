---
import type { MarkdownHeading } from "astro/dist/@types/astro";
import { GoPencil } from "react-icons/go";
import manifest from "../../package.json";

export interface Props {
  id: string;
  headings: MarkdownHeading[];
}

const { id, headings } = Astro.props;

const fileURL = new URL(
  `${manifest.homepage}/tree/main/src/content/learn/${id}`
);
---

<script>
  const addIntersectionObserver = () => {
    const observer = new IntersectionObserver((sections) => {
      sections.forEach((section) => {
        const heading = section.target.querySelector("h2, h3, h4, h5");
        if (!heading) return;
        const id = heading.getAttribute("id");
        const link = document.querySelector(`nav.toc li a[href="#${id}"]`);
        if (!link) return;

        const addRemove = section.intersectionRatio > 0 ? "add" : "remove";
        link.classList[addRemove]("active");
      });
    });

    document.querySelectorAll("article section").forEach((section) => {
      observer.observe(section);
    });
  };

  addIntersectionObserver();
</script>

<style is:global>
  .toc {
    --stroke-width: 2px;

    div {
      position: sticky;
      top: 24px;

      .headings {
        border-left: var(--stroke-width) solid var(--cn-400);
        padding-block: 12px;

        li {
          --depth: 2;
          --fill: inherit;
          --stroke: var(--cn-400);

          &:hover {
            --fill: var(--cn-a50);
            --stroke-width: 3px;
            --stroke: var(--cn-500);
            --text: var(--cn-900);
          }

          &:has(a.active) {
            --stroke-width: 4px;
            --stroke: var(--cp-500);
            --text: var(--cp-700);
          }

          margin-left: -2px;
          border-left: var(--stroke-width) solid var(--stroke);
          padding-left: calc((1ch * (var(--depth) - 1) - var(--stroke-width)));

          a {
            background-color: var(--fill);
          }
        }
      }

      ul {
        display: flex;
        flex-direction: column;
        box-sizing: border-box;

        li {
          --outline: transparent;
          --shadow: transparent;
          --text: var(--cn-700);

          &:hover {
            --text: var(--cp-700);
          }

          & a:focus-visible {
            --outline: var(--cp-500);
            --shadow: var(--cp-a200);
          }

          display: flex;
          align-items: center;
          padding-block: 2px;
          box-sizing: border-box;

          a {
            display: inline-flex;
            align-items: center;
            gap: 0.5em;
            border-radius: 4px;
            border: 1px solid var(--outline);
            padding-inline: 4px;
            color: var(--text);
            text-decoration: none;

            &:focus-visible {
              box-shadow: 0 0 0 1.5px var(--shadow);
              outline: none;
            }
          }
        }
      }
    }
  }
</style>

<nav class="toc">
  <div>
    {
      headings.length ? (
        <>
          <h2>On this page</h2>
          <ul class="headings">
            {headings.map((heading) => (
              <li style={{ "--depth": heading.depth }}>
                <a href={"#" + heading.slug}>{heading.text}</a>
              </li>
            ))}
          </ul>
        </>
      ) : null
    }
    <h2>Contribute</h2>
    <ul class="contribute">
      <li>
        <a href={fileURL} target="_blank">
          <GoPencil /> Edit this page
        </a>
      </li>
    </ul>
  </div>
</nav>
